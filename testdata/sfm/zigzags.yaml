%YAML:1.0

# where is the data?
data_dir: "/home/nstiurca/DATA/sfmdata/4_2014-12-18/results/scene_cap0_2014-12-18-14-59-40/"
imgs_glob: "image/image_*.bmp"
begin_idx: 0
end_idx: 15

# camera calibration
calib_fname: "calib_radial.yaml"

detector_SURF:
  name: "xFeature2D.SURF"

detector: #&DETECTOR_SAME_AS_EXTRACTOR
  name: "Feature2D.ORB"
  WTA_K: 2
  edgeThreshold: 31
  fastThreshold: 20
  firstLevel: 0
  nfeatures: 5000
  nlevels: 8
  patchSize: 31
  scaleFactor: 1.2
  scoreType: 0 
extractor: DETECTOR_SAME_AS_EXTRACTOR

matcher_bf_hamming:
  name: BruteForce-Hamming
  options: {}
matcher_flann_KDtree:
  name: FlannBased
  options:
    indexParams: []
    searchParams: []
matcher:  # Flann hamming
  name: FlannBased
  options:
   indexParams:
      # use defaults from OpenCV docs:
      # http://docs.opencv.org/trunk/doc/py_tutorials/py_feature2d/py_matcher/py_matcher.html#flann-based-matcher
      -
         name: algorithm
         type: 23 # CV_MAKETYPE(CV_USRTYPE1,3), ie flann_algorithm_t
         value: 6 # 1 - KDTREE; 6 - LSH (ie Hamming)
      -
         name: table_number
         type: 4  # CV_32S
         value: 6 # 12
      -
         name: key_size
         type: 4  # CV_32S
         value: 12  # 20
      -
         name: multi_probe_level
         type: 4  # CV_32S
         value: 1 # 2
         
   searchParams:
      -
         name: checks
         type: 4  # CV_32S
         value: 64 # 32
#      -
#         name: eps
#         type: 5 # CV_32F
#         value: 0.
#      -
#         name: sorted
#         type: 15  # CV_MAKETYPE(CV_USRTYPE1,2), ie bool
#         value: 1 
  
match_ratio: 0.7
